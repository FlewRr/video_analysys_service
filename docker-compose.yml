networks:
  mynetwork:

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - mynetwork
  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - mynetwork

  api:
    build: ./api
    ports:
      - "8000:8000"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SCENARIO_TOPIC: scenario_topic
      PREDICTION_TOPIC: prediction_topic
      ALLOWED_STATES: '["init_startup","in_startup_processing","active","init_shutdown","in_shutdown_processing","inactive"]'
    depends_on:
      kafka:
        condition: service_started
    networks:
      - mynetwork
    volumes:
      - ./db:/db
    user: "1000:1000"

  orchestrator:
    build: ./orchestrator
    ports:
      - "8001:8001"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SCENARIO_TOPIC: scenario_topic
      RUNNER_TOPIC: runner_topic
      PREDICTION_TOPIC: prediction_topic
      HEARTBEAT_TOPIC: heartbeat_topic
      ALLOWED_STATES: '["init_startup","in_startup_processing","active","init_shutdown","in_shutdown_processing","inactive"]'
    depends_on:
      kafka:
        condition: service_started
    networks:
      - mynetwork
    volumes:
      - ./db:/db
    user: "1000:1000"

  runner:
    build: ./runner
    ports:
      - "8002:8002"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      RUNNER_TOPIC: runner_topic
      SCENARIO_TOPIC: scenario_topic
      PREDICTION_TOPIC: prediction_topic
      INFERENCE_TOPIC: inference_topic
      HEARTBEAT_TOPIC: heartbeat_topic
    depends_on:
      kafka:
        condition: service_started
    networks:
      - mynetwork
    volumes:
      - ./videos:/videos

  inference:
    build: ./inference
    ports:
      - "8003:8003"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      RUNNER_TOPIC: runner_topic
      INFERENCE_TOPIC: inference_topic
      PREDICTION_TOPIC: prediction_topic
      HEARTBEAT_TOPIC: heartbeat_topic
    depends_on:
      kafka:
        condition: service_started
    networks:
      - mynetwork
    volumes:
      - ./videos:/videos